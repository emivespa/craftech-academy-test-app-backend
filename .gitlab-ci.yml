stages:
  - test
  - build
  - deploy
  - notify

test:
  stage: test
  environment:
    name: $CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  image: python:3.8.3-alpine
  # Replication is ok here I think.
  script:
    - apk update
    - apk add --update --no-cache postgresql-dev gcc libc-dev linux-headers postgresql-dev musl-dev zlib-dev
    - apk add --update --no-cache postgresql-dev python3-dev libpq
    - apk add --update --no-cache postgresql-dev graphviz-dev jpeg-dev
    - pip3 install -r requirements.txt
    - pytest

build:
  stage: build
  environment:
    name: $CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - set -x
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 -w 0)\"}}}" > /kaniko/.docker/config.json
    - >
      /kaniko/executor
      --cache=true
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
      ${CI_COMMIT_TAG+--destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"}

deploy:
  stage: deploy
  environment:
    name: $CI_COMMIT_REF_SLUG
  rules:
    # Checking for branch is important, otherwise this would run for tag builds
    # where ENVIRONMENT_NAMESPACE and ENVIRONMENT_TAG are empty.
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master' 
      when: manual
    - if: $CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'dev'
  image: alpine/helm:3.10.1
  script:
    - set -x
    - test -z "$ENVIRONMENT_NAMESPACE" && exit 1
    - helm upgrade --install -n $ENVIRONMENT_NAMESPACE test-app-backend chart --set image.tag=$ENVIRONMENT_TAG

notify:
  stage: notify
  environment:
    name: $CI_COMMIT_REF_SLUG
  rules:
    - if: $CI_PIPELINE_SOURCE == 'push'
  image: curlimages/curl:7.86.0 
  script:
    - set -x
    - |
      curl -X POST -H 'Content-type: application/json' --data '{"text":"Hello, backend!"}' https://hooks.slack.com/services/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
